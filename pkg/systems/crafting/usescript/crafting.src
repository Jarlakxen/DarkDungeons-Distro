/* $Id$ */

use uo;
use os;
use cfgfile;

include ":attributes:attributes";
include ":containers:containers";
include ":crafting:crafting";

program crafting(mobile, tool)
	SendSysMessage(mobile, "Select a material to work with.");
	var targ := Target(mobile);
	if ( !targ.IsA(POLCLASS_ITEM) )
		SendSysMessage(mobile, "Cancelled.");
		return 0;
	elseif ( !CanUseToolOnMaterial(mobile, tool, targ) )
		return 0;
	endif
	
	var start_menu_name := GetInitialMenuName(tool, targ);
	if ( !start_menu_name )
		SendSysMessage(mobile, "You can't make anything with that tool on this material.");
		return 0;
	endif
	
	// This is done so we dont lose these values if the 'targ' is totally consumed.
	var material		:= struct;
	material.+graphic	:= targ.graphic;
	material.+color		:= targ.color;
	material.+objtype	:= targ.objtype;
	material.+amount	:= targ.amount;
	material.+serial	:= targ.serial;
	
	var create := SelectCraftable(mobile, tool, start_menu_name, material);
	if ( !create )
		return 1;
	endif 
	
	SendSysMessage(mobile, "Crafting a "+GetObjTypeDesc(create));
endprogram

function CanUseToolOnMaterial(mobile, tool, targ)
	if ( !(targ in EnumerateItemsInContainer(mobile.backpack) ) )
		SendSysMessage(mobile, "You can only use materials in your backpack.");
		return 0;
	endif	
	
	return 1;
endfunction

function SelectCraftable(mobile, tool, start_menu_name, byref material)
	var menus_cfg := ReadConfigFile(":*:craftMenus");
	var cur_menu_elem := menus_cfg[start_menu_name];
	
	if ( cur_menu_elem.MenuScript )
		return Run_Script(cur_menu_elem.MenuScript, array{mobile, tool, start_menu_name, material});
	endif
			
	var history := array{cur_menu_elem};
	var depth := 1;
	while ( mobile.connected )
		var input := ShowCraftablesMenu(mobile, cur_menu_elem, depth, material.color);
		if ( input.SubMenu == -1 )
			cur_menu_elem := history[depth];
			depth := depth-1;
			history.Shrink(depth);
		elseif ( input.SubMenu )
			depth += 1;
			history[depth] := cur_menu_elem;
			cur_menu_elem := menus_cfg[input.SubMenu];
			if ( !cur_menu_elem )
				SendSysMessage(mobile, "Cancelled: Menu [" + input.SubMenu + "] does not exist.");
				return 0;
			endif
		elseif ( input.objtype )
			return input.objtype;
		else
			SendSysMessage(mobile, "Cancelled.");
			return 0;
		endif
	endwhile
	
	return 0;
endfunction

function CheckMaterials()
	return 1;
endfunction

function ConsumeMaterials()
	return 1;
endfunction

function DoSkillCheck()
	return 1;
endfunction

function InternalSkillCheck()
	return 1;
endfunction

function CreateItem()
	return 1;
endfunction

