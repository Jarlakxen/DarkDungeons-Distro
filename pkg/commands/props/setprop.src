/* $Id$
 *
 */
use uo;
use os;

program SetProperties(who, text)

	var ref := GetProcess(GetPid());
	SendSysMessage(who, "->"+ref.name);

	var param := SplitWords(text);
	if ( param.Size() < 2 )
		SendSysMessage(who, "SYNTAX: .setprop <property name> <value>");
		return 0;
	endif

	var targ := target(who);
	if ( !targ )
		SendSysMessage(who, "Cancelled");
		return 0;
	endif

	var property := Lower(param[1]);
	var pos := Find(text, param[2], Len(param[1])+1);
	var value := text[pos, Len(text)];

	// Useful for clearing something like 'mobile.guild_title'.
	if ( value == "NULL" )
		value := "";
	endif
	var old_val := targ.Get_Member(property);
	var old_type := Lower(TypeOf(old_val));
	case ( old_type )
		"integer"	: value := CInt(value); break;
		"string"	: value := CStr(value); break;
		"double"	: value := CDbl(value); break;
		default:
			SendSysMessage(who, "Original data-type '"+old_type+"' not supported. No changes can be made.");
			return 0;
	endcase
	SendSysMessage(who, "Old Value->"+old_val);

	ProcessInput(who, targ,property, value);

	SendSysMessage(who, "New Value->"+targ.Get_Member(property));
endprogram


function ProcessInput(who, targ, byref property, byref value)
	//Works on items and mobiles, so do this first.
	if ( property in array{"x", "y", "z", "realm"} )
		DoMovement(targ,property, value);
		return 1;
	elseif ( MobileProperties(who, targ,property, value) )
		// Special mobile methods/functions were used.
		return 1;
	else
		// Nothing special was needed to be done, just an ordinary member to change.
		targ.Set_Member(property, value);
		return 1;
	endif
endfunction


function MobileProperties(who, targ, byref property, byref value)
	if ( !targ.IsA(POLCLASS_MOBILE) )
		return error;
	endif

	case ( property )
		"concealed":
			if ( value > who.cmdlevel )
				SendSysMessage(who, "You can not conceal something higher than your cmdlevel.");
				return 1;
			else
				targ.concealed := value; return 1;
			endif
		"cmdlevel":
			if ( value > who.cmdlevel )
				SendSysMessage(who, "You can not set a command level higher than your own.");
				return 1;
			else
				targ.cmdlevel := value;
				return 1;
			endif
		"criminal":
			targ.SetCriminal(value); return 1;
		"murderer":
			targ.SetMurderer(value); return 1;
		"poisoned":
			targ.SetPoisoned(value); return 1;
		"squelch":
			targ.Squelch(value); return 1;
		"warmode":
			targ.SetWarMode(value); return 1;
	endcase

	// Nothing was done here.
	return 0;
endfunction


function DoMovement(targ, byref property, byref value)
	var x := targ.x;
	var y := targ.y;
	var z := targ.z;
	var realm := targ.realm;

	case ( property )
		"x":
			x := value;
			break;
		"y":
			y := value;
			break;
		"z":
			z := value;
			break;
		"realm":
			realm := value;
			break;
	endcase
	MoveObjectToLocation(targ, x, y, z, realm, MOVEOBJECT_FORCELOCATION);

	return 1;
endfunction
