/* $Id: tile.src 484 2006-06-29 10:58:24Z austinheilman $
 *
 * Purpose
 * This is a "fastbuild" command you supply itemnumber and Z height as
 * arguments. If Z is left out it takes the first coordinates Z as
 * the Z to be built on. This command is great for putting down floors
 * etc.
 *
 * TODO
 * Clean up the code when abs() is avail. and C-style for loops
 * don't require initialization.
 *
 */
use uo;


program command_tile(who, params)
	if ( !params )
		SendSysMessage(who, "No arguments supplied. Usage: .tile [item] ([z]).");
		return 0;
	endif

	var argarray := SplitWords(params); // split the arguments.
	var tileitem  := CInt(argarray[1]);
	var tilez     := CInt(argarray[2]);
	var zvalid := 1;  // assume z is correct for now.

	if ( !tilez )
		SendSysMessage(who, "No Z supplied. Using target #1 Z instead.");
		zvalid := 0;
	else
		if ( (tilez < -127) || (tilez > 128) ) // check the bounds.
			SendSysMessage(who, "Z is out of bounds. Using target #1 Z instead.");
			zvalid := 0;
		endif
	endif

	SendSysMessage(who, "Select coordinate #1");
	var coordstructone := TargetCoordinates( who);
	SendSysMessage(who, "Select coordinate #2");
	var coordstructtwo := TargetCoordinates( who);

	if( (!coordstructone) || (!coordstructtwo) ) // check that we got two valid coordstructs.
		SendSysMessage(who, "Missing coordinate. Aborting.");
		return 0;
	endif

	if ( !zvalid ) // if we are to use the coord #1 Z, check it out.
		if ( coordstructone.z < -127 || coordstructone.z > 128 )
			SendSysMessage(who, "Z is out of bounds. Aborting.");
			return 0;
		endif
	endif

	if ( !zvalid )
		tilez := coordstructone.z;
	endif

	// dummy variables, won't be needed after rewrite of command.
	var startx;
	var starty;
	var endx;
	var endy;

	if ( coordstructone.x <= coordstructtwo.x )
		startx  := coordstructone.x;
		endx    := coordstructtwo.x;
	else
		startx  := coordstructtwo.x;
		endx    := coordstructone.x;
	endif

	if ( coordstructone.y <= coordstructtwo.y )
		starty  := coordstructone.y;
		endy    := coordstructtwo.y;
	else
		starty  := coordstructtwo.y;
		endy    := coordstructone.y;
	endif

	var fooy := starty; // store the original startY for use after each iteration.

	while ( startx <= endx )
		while ( starty <= endy )
			CreateItemAtLocation(startx, starty, tilez, tileitem, 1, who.realm);
			starty += 1;
		endwhile
		starty := fooy;
		startx := startx += 1;
	endwhile

	SendSysMessage(who, "Command completed.");

	return 0;
endprogram
