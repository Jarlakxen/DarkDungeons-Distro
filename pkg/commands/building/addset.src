// $Id$
//
//

use cfgfile;
use os;
use uo;

program textcmd_makeSet( who, set )
	if(!set)
		SendSysMessage(who, "You must enter the :pkg:setscfg file to add this set to. Use ::sets to add to /config/sets.cfg");
		SendSysMessage(who, "Example: .addset ::sets");
		return 0;
	endif

	var props2 := array;
	var prop2 := array;
	prop2.+ name;
	prop2.+ value;

	UnloadConfigFile(set);
	var cfg := ReadConfigfile(set);
	if(!cfg or cfg == error)
		SendSysMessage(who, "You must enter the :pkg:setscfg file to add this set to. Use ::sets to add to /config/sets.cfg");
		SendSysMessage(who, "Example: .addset ::sets");
		return 0;
	endif

	var numprops2 := 1;
	var ttype;
	var thesetname := Requestinput(who, who.backpack , "What would you like to call this set?");
	if (cfg[thesetname])
		SendSysMessage(who, "That set name is already taken!");
		return 0;
	endif

	SendSysMessage(who, "Select the center of the set area:");

	var wherecenter := TargetCoordinates(who);
	SendSysMessage(who, "Select the upper left corner of the set area.");
	SendSysMessage(who, "Remember to take the 45 degree tilt into account!");
	var whereleft := TargetCoordinates(who);
	SendSysMessage(who, "Select the lower right corner of the set area:");
	var whereright := TargetCoordinates(who);
	var lowerz := Requestinput(who, who.backpack , "Type the lower z coordinate of the set area:");
	var upperz := Requestinput(who, who.backpack , "Type the upper z coordinate of the set area:");
	lowerz := CInt(lowerz);
	upperz := CInt(upperz);

	var stuff := ListObjectsInBox( whereleft.x,whereleft.y,lowerz,whereright.x,whereright.y,upperz, who.realm);
	foreach item in stuff
		if (!item.IsA(POLCLASS_ITEM))
			continue;
		endif
		sleepms(2);
		var propit := "";
		var prop := array;
		prop.+ name;
		prop.+ value;
		prop.name := "Item";
		propit := (item.objtype);
		propit := propit + " " + (item.x - wherecenter.x);
		propit := propit + " " + (item.y - wherecenter.y);
		propit := propit + " " + (item.z - lowerz);
		propit := propit + " " + (item.color);
		prop.value := propit;
		ttype := "Item";
		prop2.name := "Item";
		prop2.value := propit;
		props2[numprops2] := prop2;
		numprops2 := numprops2 + 1;
	endforeach
	AppendConfigFileElem( set, "set", thesetname, props2 );
	UnloadConfigFile(set);
endprogram
