/*
 * $Id$
 *
 */

use uo;
use os;
use cfgfile;

include ":gumps:yesno";


program textcmd_MakeSet(who , text)
	var config := ReadConfigFile(":itemutils:sets");
	
	if( !text )
		SendSysMessage(who, "Syntax: .addset [name]");
		return 0;
	else
		if( !YesNo(who, "Do you wish to name this set: "+text) )
			return 0;
		endif
	endif
	
	UnloadConfigFile(":itemutils:sets");
	
	if( config[text] )
		SendSysMessage(who, "Error: There is already a set called "+text, 3, 40);
		return 0;
	endif
	
	SendSysMessage(who, "Select the North West corner of what you wish to template.");
	var nw_targ := TargetCoordinates(who);
	if( !nw_targ )
		SendSysMessage(who, "Missing NW coordinate. Aborting.", 3, 40);
		return 0;
	endif
		
	SendSysMessage(who, "Select the South East corner of what you wish to template.");
	var se_targ := TargetCoordinates(who);
	if( !se_targ )
		SendSysMessage(who, "Missing SE coordinate. Aborting.", 3, 40);
		return 0;
	endif
	
	var startx, starty, endx, endy;
	if( nw_targ.x <= se_targ.x )
		startx := nw_targ.x;
		endx	 := se_targ.x;
	else
		startx := se_targ.x;
		endx	 := nw_targ.x;
	endif
	if( nw_targ.y <= se_targ.y )
		starty := nw_targ.y;
		endy	 := se_targ.y;
	else
		starty := se_targ.y;
		endy	 := nw_targ.y;
	endif
		
	var itemlist := array;
	var iteminfo := struct{"name":="//Item", "value":="ObjType Graphic Color\tX Y Z\tDESC"};
	itemlist.Append(iteminfo);
	
	SendSysMessage(who, "Target a piece of the item you wish to use as a reference point.");
	SendSysMessage(who, "The reference point will be used for recreating this set.");
	
	var targ := TargetCoordinates(who);
	if( !targ )
		return 0;
	endif
	
	foreach item in (ListObjectsInBox(startx, starty, -100, endx, endy, 100, who.realm))
		if ( item.ISA(POLCLASS_ITEM) )
			iteminfo.name := "Item";
			iteminfo.value := CInt(item.objtype)+"\t"+item.graphic+"\t"+item.color+"\t"+(item.x-targ.x)+" "+(item.y-targ.y)+" "+(item.z-targ.z)+"\t//"+item.desc;
			
			itemlist.Append(iteminfo);
			SleepMS(2);
		endif
	endforeach
	
	var result := AppendConfigFileElem(":itemutils:config/sets", "Set", text, itemlist);
	if ( result.errortext )
		SendSysMessage(who, "Error creating set ->"+result);
		return 0;
	else
		SendSysMessage(who, "Done!");
		return 1;
	endif
endprogram
