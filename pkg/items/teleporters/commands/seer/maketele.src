/*
 * $Id: maketele.src 539 2006-07-03 21:18:36Z austinheilman $
 *
 */

use uo;
use polsys;

include ":gumps:gumps";
include ":gumps:gumps_ex";

CONST A_REALM_TXT	:= 0xB001;
CONST A_XCOORD_TXT	:= 0xB002;
CONST A_YCOORD_TXT	:= 0xB003;
CONST A_ZCOORD_TXT	:= 0xB004;
CONST B_REALM_TXT	:= 0xB005;
CONST B_XCOORD_TXT	:= 0xB006;
CONST B_YCOORD_TXT	:= 0xB007;
CONST B_ZCOORD_TXT	:= 0xB008;
CONST CANCEL_BTN	:= 0xE000;
CONST OKAY_BTN		:= 0xE001;

program command_MakeTele(who)
	var gump := GFCreateGump();

	GFResizePic(gump, 0, 0, GFGetCfgConst("Defaults", "BackGround"), 450, 460);
	GFResizePic(gump, 15, 15, GFGetCfgConst("Defaults", "ForeGround"), 420, 35);
	GFTextMid(gump, 10, 20, 430, 2100, "Teleport Create Menu");

	GFResizePic(gump, 15, 55, GFGetCfgConst("Defaults", "ForeGround"), 420, 90);
	GFTextLine(gump, 20, 60, 2100, "Tele one will be placed where you are standing.");
	GFTextLine(gump, 20, 80, 2100, "Tele two will be placed where tele one leads to.");
	GFTextLine(gump, 20, 100, 2100, "If there is no tele two, then its a one way teleporter.");
	GFTextLine(gump, 20, 120, 2100, "Make sure you have 'SeeInvisItems' on to see the tiles.");

	GFResizePic(gump, 15, 150, GFGetCfgConst("Defaults", "ForeGround"), 420, 295);

	GFTextLine(gump, 20, 160, 2100, "Teleporter 1 Settings");
	GFTextLine(gump, 20, 193, 2100, "Realm");
	GFResizePic(gump, 120, 190, 2620, 100, 30);
	GFTextEntry(gump, 130, 195, 80, 25, 2100, who.realm, A_REALM_TXT);
	GFTextLine(gump, 20, 216, 2100, "X Coordinate");
	GFResizePic(gump, 120, 213, 2620, 100, 30);
	GFTextEntry(gump, 130, 218, 80, 25, 2100, "0", A_XCOORD_TXT);
	GFTextLine(gump, 20, 239, 2100, "Y Coordinate");
	GFResizePic(gump, 120, 236, 2620, 100, 30);
	GFTextEntry(gump, 130, 241, 80, 25, 2100, "0", A_YCOORD_TXT);
	GFTextLine(gump, 20, 262, 2100, "Z Coordinate");
	GFResizePic(gump, 120, 259, 2620, 100, 30);
	GFTextEntry(gump, 130, 264, 80, 25, 2100, "0", A_ZCOORD_TXT);

	GFAddButton(gump, 344, 270, 2076, 2075, GF_CLOSE_BTN, OKAY_BTN);
	GFAddButton(gump, 340, 330, 2121, 2120, GF_CLOSE_BTN, CANCEL_BTN);

	GFTextLine(gump, 20, 310, 2100, "Teleporter 2 Settings");
	GFTextLine(gump, 20, 343, 2100, "Realm");
	GFResizePic(gump, 120, 340, 2620, 100, 30);
	GFTextEntry(gump, 130, 345, 80, 25, 2100, who.realm, B_REALM_TXT);
	GFTextLine(gump, 20, 366, 2100, "X Coordinate");
	GFResizePic(gump, 120, 363, 2620, 100, 30);
	GFTextEntry(gump, 130, 368, 80, 25, 2100, who.x, B_XCOORD_TXT);
	GFTextLine(gump, 20, 389, 2100, "Y Coordinate");
	GFResizePic(gump, 120, 386, 2620, 100, 30);
	GFTextEntry(gump, 130, 391, 80, 25, 2100, who.y, B_YCOORD_TXT);
	GFTextLine(gump, 20, 412, 2100, "Z Coordinate");
	GFResizePic(gump, 120, 409, 2620, 100, 30);
	GFTextEntry(gump, 130, 414, 80, 25, 2100, who.z, B_ZCOORD_TXT);

	var input := GFSendGump(who, gump);
	if ( input[OKAY_BTN] )
		var dest_a, dest_b;
		dest_a := struct{"realm", "x", "y", "z"};
		dest_b := struct{"realm", "x", "y", "z"};

		dest_a.realm := GFExtractData(input, A_REALM_TXT);
		dest_a.x := CInt(GFExtractData(input, A_XCOORD_TXT));
		dest_a.y := CInt(GFExtractData(input, A_YCOORD_TXT));
		dest_a.z := CInt(GFExtractData(input, A_ZCOORD_TXT));

		if ( !CreateTeleTile(who, who.realm, who.x, who.y, who.z, dest_a) )
			return 0;
		endif
		
		dest_b.realm := GFExtractData(input, B_REALM_TXT);
		dest_b.x := CInt(GFExtractData(input, B_XCOORD_TXT));
		dest_b.y := CInt(GFExtractData(input, B_YCOORD_TXT));
		dest_b.z := CInt(GFExtractData(input, B_ZCOORD_TXT));
		
		if ( dest_b.realm && dest_b.x && dest_b.y )
			if ( !CreateTeleTile(who, dest_a.realm, dest_a.x, dest_a.y, dest_a.z, dest_b) )
				return 0;
			else
				SendSysMessage(who, "Two way teleporter setup completed.");
			endif
		else
			SendSysMessage(who, "One way teleporter created.");
		endif		
	else
		SendSysMessage(who, "Cancelled.");
	endif
	
	return 1;
endprogram

function CreateTeleTile(who, make_realm, make_x, make_y, make_z, byref dest)
	var realm_info := Realms();
	realm_info := realm_info[dest.realm];
	if ( !realm_info )
		SendSysMessage(who, "Error - Teleporter set to have an invalid realm name '"+dest.realm+"'");
		return 0;
	elseif ( dest.x <= 0 )
		SendSysMessage(who, "Error - Teleporter set to have an invalid X coordinate. ' <= 0 '");
		return 0;
	elseif ( dest.y <= 0 )
		SendSysMessage(who, "Error - Teleporter set to have an invalid Y coordinate. ' <= 0 '");
		return 0;
	elseif ( dest.x > realm_info.width )
		SendSysMessage(who, "Error - Teleporter X coordinate exceeds width for realm '"+dest.realm+"'");
		return 0;
	elseif ( dest.y > realm_info.height )
		SendSysMessage(who, "Error - Teleporter Y coordinate exceeds height for realm '"+dest.realm+"'");
		return 0;
	elseif ( !dest.z )
		dest.z := GetWorldHeight(dest.x, dest.y);
	endif

	var tile := CreateItemAtLocation(make_x, make_y, make_z, "telepad", 1, make_realm);
	if ( tile.errortext )
		SendSysMessage(who, "Error - Unable to create 'telepad' ->"+tile.errortext);
		return 0;
	endif

	SetObjProperty(tile, "Destination", dest);
	PlayStationaryEffect(make_x, make_y, make_z, 3546, 200, 0, 0, make_realm);

	return 1;
endfunction