/* $Id$
 *
 */

use uo;
use os;
use cfgfile;
use polsys;

include ":doors:report";
include ":datafile:datafile";

program InitializeDoors(realm_list)
	if ( !realm_list )
		if ( GetGlobalProperty("DoorsInitialized") )
			return 0;
		else
			SetGlobalProperty("DoorsInitialized", 1);
		endif
		
		// Started up by start.ecl most likely.
		realm_list := Realms().Keys();
	elseif ( Lower(TypeOf(realm_list)) != "array" )
		// Manual door creation was done.
		realm_list := array{realm_list};
	endif
	
	DOOR_ReportText("---=[ DOOR INITIALIZER HAS STARTED UP ]=---", DOOR_REPORT_SYSLOG);
	
	foreach realm in ( realm_list )
		var cfg_file := ReadConfigFile(":doors:doors-"+realm);
		if ( cfg_file.errortext )
			DOOR_ReportText("No config file found for realm "+realm, DOOR_REPORT_SYSLOG);
			continue;
		else
			DOOR_ReportText("Setting up doors for realm "+realm, DOOR_REPORT_SYSLOG);
		endif
		
		// Allowing unlimited elem names so people can sort the configs as they wish!
		foreach elem_name in ( GetConfigStringKeys(cfg_file) )
			DOOR_ReportText("Setting up doors in config elem "+elem_name, DOOR_REPORT_SYSLOG);
			var cfg_elem := cfg_file[elem_name];
			CreateDoorsForElem(cfg_elem, realm);
			
			SleepMS(2);
		endforeach
		
		UnloadConfigFile(":doors:doors-"+realm);
		
		SleepMS(2);
	endforeach
		
	DOOR_ReportText("---=[ DOOR INITIALIZER HAS FINISHED ]=---", DOOR_REPORT_SYSLOG);
	
	return 1;
endprogram

function CreateDoorsForElem(byref cfg_elem, byref realm)
	MAIN: foreach entry in ( GetConfigStringArray(cfg_elem, "Door") )
		entry := SplitWords(entry);
		var x := CInt(entry[1]);
		var y := CInt(entry[2]);
		var z := CInt(entry[3]);
		var type := CInt(entry[4]);
		
		// First check to make sure the door isn't already there.
		foreach object in ( ListObjectsInBox(x, y, z, x, y, z, realm) )
			if ( object.IsA(POLCLASS_DOOR) )
				DOOR_ReportText("Unable to create "+x+" "+y+" "+z+" "+Hex(type)+" - Door already found on that position.", DOOR_REPORT_SYSLOG);
				continue MAIN;
			endif
			
			SleepMS(2);
		endforeach				
		
		var door := CreateItemAtLocation(x, y, z, type, 1, realm);
		if ( door.errortext )
			DOOR_ReportText("Unable to create "+x+" "+y+" "+z+" "+Hex(type)+" - "+door.errortext, DOOR_REPORT_SYSLOG);
		endif
		
		SleepMS(2);
	endforeach
	
	return 1;
endfunction