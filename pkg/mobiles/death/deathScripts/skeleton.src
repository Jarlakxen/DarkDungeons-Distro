/* $Id: skeleton.src 29 2009-07-13 08:12:30Z AustinHeilman $
 *
 */

use uo;
use os;
use util;

include ":death:death";

CONST MAX_RANGE	:= 8;

program DeathScript(params)
	var corpse := params[1];
	//var npc_cfg := params[2];
	var template := params[3];
	params := 0; // Not needed anymore

	var pieces := array
	{
		0x1AE1,
		0x1B11,
		0x1B13,
		0x1B15,
		0x1B17,
		0x1B19,
		0x1B1B,
		0xF7E
	};

	if ( RandomDiceRoll("1d10") > 4 )
		ResZombie(corpse, pieces, template);
	else
		PrintTextAbove(corpse, "*the zombie crumbles to dust*");
		SleepMS(500);
		DestroyItem(corpse);
	endif

	return 1;
endprogram

function ResZombie(corpse, byref pieces, template)
	PrintTextAbove(corpse, "*the pieces twitch*");
	SleepMS(30);
	
	var tcorpse := struct;
	tcorpse.+color := corpse.color;
	tcorpse.+x := corpse.x;
	tcorpse.+y := corpse.y;
	tcorpse.+z := corpse.z;
	tcorpse.+realm := corpse.realm;

	foreach obj_type in ( pieces )
		var piece := CreateItemAtLocation(corpse.x, corpse.y, corpse.z, obj_type, 1, corpse.realm);
		piece.color := corpse.color;
		piece.movable := 1;
		MoveItem(corpse, piece);
		SleepMS(2);
	endforeach

	DestroyItem(corpse);

	Sleep(RandomDiceRoll("3d7"));

	var recovered_pieces := array;

	foreach entry in ( pieces )
		var item := FindPieceToRecover(tcorpse, MAX_RANGE, entry, recovered_pieces);
		if ( item )
			//PrintTextAbove(item, "*twitches*");
			recovered_pieces.Append(item);
		endif
		SleepMS(2);
	endforeach

	if ( recovered_pieces.Size() == pieces.Size() )
		if ( !MoveItemsToCenter(tcorpse, recovered_pieces) )
			return 0;
		endif

		foreach item in ( recovered_pieces )
			DestroyItem(item);
			SleepMS(2);
		endforeach

		var npc := CreateNPCFromTemplate(template, tcorpse.x, tcorpse.y, tcorpse.z, 0, tcorpse.realm);
		if ( npc.errortext )
			SysLog("Error making npc ->"+npc.errortext);
			SysLog("template-"+template+"     x-"+tcorpse.x+"   y-"+tcorpse.y+"   z-"+tcorpse.z+"     realm-"+tcorpse.realm);
		endif
	endif

	return 1;
endfunction

function FindPieceToRecover(tcorpse, range, piece, byref recovered_pieces)
	foreach item in ( ListItemsNearLocation(tcorpse.x, tcorpse.y, tcorpse.z, range, tcorpse.realm) )
		if ( (item.objtype == piece) && (item.color == tcorpse.color) )
			if ( !Recovered(item, recovered_pieces) )
				SetObjProperty(item, "#taken", GetPid());
				return item;
			endif
		endif
		SleepMS(2);
	endforeach
	
	return 0;
endfunction

function MoveItem(corpse, item)
	var num_tries := 0;
	var newx, newy;
	var newz;
	repeat
		newx := RandomInt(MAX_RANGE)-CInt(MAX_RANGE/2);
		newy := RandomInt(MAX_RANGE)-CInt(MAX_RANGE/2);
		newx := newx+corpse.x;
		newy := newy+corpse.y;

		num_tries := num_tries + 1;
		if (num_tries > 20)
			return;
		endif
		SleepMS(2);
		newz := GetWorldHeight(newx, newy);
	until ( CheckLOSAt(corpse, newx, newy, newz) );

	MoveObjectToLocation(item, newx, newy, newz, item.realm, MOVEOBJECT_FORCELOCATION);
endfunction

function MoveItemsToCenter(tcorpse, byref recovered_pieces)
	var line_list := dictionary;
	foreach item in ( recovered_pieces )
		line_list[item] := GetCoordsInLine(item.x, item.y, tcorpse.x, tcorpse.y);
		SleepMS(2);
	endforeach

	while ( line_list.Size() > 0 )
		foreach item in ( line_list.Keys() )
			var new_coord := line_list[item][1];
			var result := MoveObjectToLocation(item, new_coord.x, new_coord.y, item.z, item.realm, MOVEOBJECT_FORCELOCATION);
			if ( result )
				line_list[item].Erase(1);
				if ( line_list[item].Size() <= 0 )
					// Successfully moved to the center.
					line_list.Erase(item);
					item.invisible := 1;
				endif
			else
				line_list.Erase(item);
				item := FindPieceToRecover(tcorpse, MAX_RANGE, item.graphic, recovered_pieces);
				if ( !item )
					return 0;
				else
					line_list[item] := GetCoordsInLine(item.x, item.y, tcorpse.x, tcorpse.y);
				endif				
			endif
			SleepMS(2);
		endforeach

		Sleep(1);
	endwhile

	return 1;
endfunction

function Recovered(item, recovered_pieces)
	if ( GetProcess(CInt(GetObjProperty(item, "#taken"))) )
		return 1;
	endif

	foreach thing in ( recovered_pieces )
		if ( item.graphic == thing.graphic )
			return 1;
		endif

		SleepMS(2);
	endforeach

	return 0;
endfunction
