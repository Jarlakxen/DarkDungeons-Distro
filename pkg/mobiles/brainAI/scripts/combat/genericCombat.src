/* $Id: genericCombat.src 167 2009-07-25 23:16:40Z AustinHeilman $
 *
 */

use uo;
use os;

include ":brainAI:npcNerves";
include ":brainAI:npcCommands";
include ":brainAI:commonFunctions";
include ":attributes:attributes";
include ":weapons:weaponInfo";
include "include/facings";
include ":damage:damage";

program BrainNerve(params)
	var npc		:= params[1];
	var nerve_name	:= params[2];
	var event	:= params[3];
	var settings	:= params[4];
	var scripts	:= params[5];
	params := 0; // Not needed anymore.

	//Store it here so it does not have to do the math over and over.
	var flee_level := NPC_GetFleeLevel(npc, settings["FleeLevel"]);

	var opponent := event.source;

	AI_SetOpponent(npc, opponent);

	var min_range, max_range;
	NPC_WeaponRanges(npc, min_range, max_range);

	while( npc )
		var dist := Distance(npc, opponent);
		if ( ShouldFlee(npc, flee_level, opponent, dist) )
			AI_WarMode(npc, 0);
			AI_Move(npc, opponent, NEMOVE_AWAY, NEMOVE_RUN, WAKEUP, 100);
		elseif ( DoneFighting(npc, opponent, dist) )
			if ( scripts.Exists("EndFight") )
				params := array{opponent, settings, scripts};
				AI_StartNerve(npc, "EndFight", scripts["EndFight"].script, params);
			else
				AI_WarMode(npc, 0);
			endif
			AI_EndNerve(npc, nerve_name);
		elseif ( dist < min_range )
			AI_Move(npc, opponent, NEMOVE_AWAY, NEMOVE_RUN, WAKEUP, (settings["MinRange"]-dist));
		elseif( dist > max_range )
			AI_Move(npc, opponent, NEMOVE_TOWARD, NEMOVE_RUN, WAKEUP, (dist-settings["MaxRange"]));
		else
			npc.facing := GetFacing(npc.x, npc.y, opponent.x, opponent.y);
			AI_Wakeup(npc);
		endif

		//To-Do:
		// If using archery and out of ammo or can't use missile weapon
		// switch to a melee weapon and call SetupRanges() again
		//

		SleepMS(400);
		AI_ClearThoughts(npc, CLR_NERVE);
	endwhile
endprogram

function DoneFighting(npc, opponent, byref dist)
	if ( opponent.dead )
		return 1;
	elseif ( !opponent )
		return 1;
	elseif ( opponent.hidden )
		return 1;
	elseif ( opponent.concealed > npc.cmdlevel )
		return 1;
	elseif ( dist > 20 )
		return 1;
	elseif ( dist > 10 && !CheckLineOfSight(npc, opponent) )
		return 1;
	endif

	return 0;
endfunction

function ShouldFlee(npc, byref flee_level, opponent, byref dist)
	if ( AP_GetVital(npc, "Hits") < flee_level )
		return 1;
	elseif ( dist > 20 )
		return 0;
	elseif ( dist > 10 && !CheckLineOfSight(npc, opponent) )
		return 0;
	endif

	return 0;
endfunction
