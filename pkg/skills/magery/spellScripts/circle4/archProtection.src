// $Id$

use uo;
use os;

include ":magery:spells";
include ":attributes:attributes";
include ":timedscripts:timedScripts";
include ":damage:damage";

program SpellScript_ArchProtection(params)
	var mobile := params[1];
	var info := params[2];
	params := 0; // No longer needed
	
	MS_PlaySpellSFX(info.spell_id, mobile);
	
	// Protection on all party members and caster
	// Get all targets in area that are in party or self.
	var area_size := GetConfigInt(info.spell_config, "AreaSize");
	var includes := GetObjProperty(mobile, "#Party");
	if ( includes == error )
			includes := array{mobile.serial};
	else
			includes.Append(mobile.serial);
	endif

	var friendlies := MS_GetFriendlies(mobile, area_size);
	if ( friendlies != error )
			includes == friendlies;
	endif

	var targs := MS_GetValidTargets(mobile, area_size, 1, "", includes);
	foreach vtarg in targs
		if ( !GetObjProperty(vtarg, "Protection") )
			ApplyArchProtection(vtarg);
		else
			RemoveArchProtection(vtarg);
		endif

		MS_PlaySpellGFX(info.spell_id, vtarg, mobile);
	endforeach
	
	return 1;
endprogram

function ApplyArchProtection(mobile)
	ModifyResistance(mobile, DMG_PHYSICAL, -35);
	AP_ModifySkillMod(mobile, RESISTING_SPELLS, -35);
	
	// At present there is no determined way to modify casting speed and other stats:
	// ModifyMagicProperties(mobile, "FasterCastSpeed", -2);
	
	SetObjProperty(mobile, "Protection", 1);
endfunction

function RemoveArchProtection(mobile)
	ModifyResistance(mobile, DMG_PHYSICAL, 35);
	AP_ModifySkillMod(mobile, RESISTING_SPELLS, 35);
	
	// At present there is no determined way to modify casting speed and other stats:
	// ModifyMagicProperties(mobile, "FasterCastSpeed", 2);
	
	EraseObjProperty(mobile, "Protection");
endfunction