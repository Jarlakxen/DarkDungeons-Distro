// $Id$

use uo;
use os;

include ":magery:spells";
include ":coords:isValidLoc";
include ":runebook:runebookFunctions";

program SpellScript_Mark(params)
	var mobile := params[1];
	var info := params[2];
	var targ := params[3];
	params := 0;

	if ( !targ.IsRecallRune() )
		SendSysMessage(mobile, "You can only cast that on a recall rune!");
		return 0;
	elseif ( !Accessible(mobile, targ) )
		SendSysMessage(mobile, "You can't reach that!");
		return 0;
	elseif ( !ReserveItem(targ) )
		SendSysMessage(mobile, "Your spell fizzles.");
		return 0;
	elseif ( GetObjProperty(targ, "Vendored") )
		SendSysMessage(mobile, "You cannot mark runes on a vendor.");
		return 0;
	elseif ( mobile.multi )
		SendSysMessage(mobile, "You cannot mark runes here.");
		PlaySoundEffect(mobile, 0x005d);
		PlayObjectCenteredEffect(mobile, 0x3735, 0x0a, 0x1e);
		return 0;
	elseif ( ((mobile.x >= 5120) && (mobile.x <= 5375) && (mobile.y >= 0) && (mobile.y <= 255)) || (mobile.multi) )
		SendSysMessage(mobile, "You cannot mark runes here.");
		return 0;
	endif

	var signs := ListItemsNearLocationOfType( mobile.x, mobile.y, mobile.z, 30, 0x7060, mobile.realm);
	foreach sign in signs
		var infoarr := GetObjProperty(sign, "homeinfo");
		if( infoarr )
			if( (mobile.x >= infoarr[2]) && (mobile.x <= infoarr[4]) && (mobile.y >= infoarr[3]) && (mobile.y <= infoarr[5]) )
				SendSysMessage(mobile, "You cannot mark runes here.");
				return 0;
				break;
			endif
		endif
	endforeach

	MS_PlaySpellSFX(info.spell_id, targ);
	MS_PlaySpellGFX(info.spell_id, targ, mobile);

	targ.SetDestination(mobile.x, mobile.y, mobile.z, mobile.realm);

	SetName(targ, "a marked recall rune");

	return 1;
endprogram