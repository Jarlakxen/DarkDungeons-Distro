use uo;
use cfgfile;
use os;
use util;
use math;

include ":attributes:attributes";
include "include/objtype";
include ":loot:lootParser";
include ":crafting:old/include/toolWear";
include "include/sysEvent";

program use_fishpole(who, fishingpole)
	if ( !ReserveItem(fishingpole) )
		SendSysMessage(who, "That is already in use.");
		return 0;
	elseif( (!fishingpole.movable) || !ReserveItem(fishingpole) )
		SendSysMessage(who, "You cannot use that");
		return 0;
	endif
	if(!IsFishingPoleEquipped(who, fishingpole))
		SendSysMessage(who, "You have to equip that to go fishing!");
		return 0;
	endif
	
	EraseObjProperty(who, "#IsMeditating");
	EraseObjProperty(who, "#HealTimer");

	var targetsquare := TargetCoordinates(who);
	if(!targetsquare)
		return;
	endif
	var locinfo:= GetMapInfo( targetsquare.x, targetsquare.y, who.realm );
	if(IsValidTarget(who, targetsquare, locinfo))
		PerformAction(who, 0x9);
		var newsplash := CreateItemAtLocation(targetsquare.x, targetsquare.y, targetsquare.z,  0x352d, 1, who.realm);
		newsplash.movable := 0;
		PlaySoundEffect(who, 0x240);
		sleepms(400);
		set_critical(1);
		DestroyItem(newsplash);
		set_critical(0);
		newsplash := CreateItemAtLocation(targetsquare.x, targetsquare.y, targetsquare.z,  0x352e, 1, who.realm);
		newsplash.movable := 0;
		sleepms(400);
		set_critical(1);
		DestroyItem(newsplash);
		set_critical(0);
		newsplash := CreateItemAtLocation(targetsquare.x, targetsquare.y, targetsquare.z,  0x352f, 1, who.realm);
		newsplash.movable := 0;
		sleepms(400);
		set_critical(1);
		DestroyItem(newsplash);
		set_critical(0);
		newsplash := CreateItemAtLocation(targetsquare.x, targetsquare.y, targetsquare.z,  0x3530, 1, who.realm);
		newsplash.movable := 0;
		sleepms(400);
		set_critical(1);
		DestroyItem(newsplash);
		set_critical(0);
		sleepms(1500);
		if(!isSOS(who, targetsquare))
			var difficulty;
			if(targetsquare.objtype)
				difficulty := GetHarvestDifficulty("fish", targetsquare.x, targetsquare.y, targetsquare.objtype, who.realm);
			else
				difficulty := GetHarvestDifficulty("fish", targetsquare.x, targetsquare.y, locinfo.landtile, who.realm);
			endif
			if(difficulty == error)
				SendSysMessage(who, "There doesn't seem to be any fish here");
				return 0;
			endif
			var successrate := SkillCheck(who, FISHING, difficulty,200);
			if(successrate > 0)
				var fishreturned := HarvestResource("fish", targetsquare.x, targetsquare.y, 1, 1, who.realm);
				if(!fishreturned)
					SendSysMessage(who, "Oops, you let that one get away!");
					return 0;
				endif
				var catchtype := GetTheCatch(who);
				if(CreateItemInContainer(who.backpack, catchtype, 1))
				// This next call replaces the old "AwardPoints" function call. Hopefully it works right.
					CheckSkillAdvance(who, FISHING, difficulty, 50);
				endif
			else
				if(RandomInt(100)< 1)
				// A saeserpent appears if crit fail occurs.
					CriticalFailure(who, targetsquare);
				else
					SendSysMessage(who, "They don't seem to be biting today");
				endif
			endif
			CheckToolWear (who, fishingpole, FISHING);
		endif
	endif
	return 1;
endprogram

function IsInRange(who, x, y, z)
	z := z;
	var xd, yd;
	var retval := 1;
	xd := Abs(who.x - x);
	yd := Abs(who.y - y);
	
	if((xd > 6)||(yd > 6))
		retval := 0;
	endif
	
	return retval;
endfunction

function IsWater(thistile, locinfo)
	if(thistile.objtype)
		if((thistile.objtype >= 0x1797)&&(thistile.objtype <= 0x179c))
			return 1;
		elseif((thistile.objtype >= 0x346e)&&(thistile.objtype <= 0x3485))
			return 1;
		elseif((thistile.objtype >= 0x3490)&&(thistile.objtype <= 0x34ab))
			return 1;
		elseif((thistile.objtype >= 0x34b5)&&(thistile.objtype <= 0x34d5))
			return 1;
		endif
		
		else
		
		if((locinfo.landtile >= 0x00a8)&&(locinfo.landtile <= 0x00ab))
			  return 1;
		elseif((locinfo.landtile >= 0x0136)&&(locinfo.landtile <= 0x0137))
			  return 1;
		elseif((locinfo.landtile >= 0x3ff0)&&(locinfo.landtile <= 0x3ff3))
			return 1;
		endif
	endif
	return 0;
endfunction

function IsValidTarget(who, targetsquare, locinfo)
	var retval := 1;
	
	if(!IsWater(targetsquare, locinfo))
		SendSysMessage(who, "You can't fish there!");
		retval := 0;
	elseif(!IsInRange(who, targetsquare.x, targetsquare.y, targetsquare.z))
		SendSysMessage(who, "That is too far away");
		retval := 0;
	elseif(!CheckLosAt(who, targetsquare.x, targetsquare.y, targetsquare.z))
		SendSysMessage(who, "That location is not in your line of sight!");
		retval := 0;
	endif
	
	return retval;
endfunction

function GetTheCatch(who)
	var fishtype;
	var currentskill := GetAttribute(who, FISHING);
	var thisone := RandomInt(100)+ 1;
	var magicfish_array := {0xA368, 0xA369, 0xA36A, 0xA36B, 0xA36C, 0xA36D, 0xA36E, 0xA36F};
	
	if(thisone <= 75)
		fishtype := RandomInt(UOBJ_SFISH_END - UOBJ_SFISH_START)+ UOBJ_SFISH_START;
		SendSysMessage(who, "You catch two small fish!");
	elseif(thisone <= 94)
		fishtype := RandomInt(UOBJ_FISH_END - UOBJ_FISH_START)+ UOBJ_FISH_START;
		SendSysMessage(who, "You catch a nice one!");
	elseif(thisone <= 96)
		if(RandomInt(currentskill) >= 50)
			//                       boots  th-boot  shoes  sandals
			var bootarray := array(0x170b, 0x1711, 0x170f, 0x170d);
			fishtype := bootarray[RandomInt(4)+ 1];
			SendSysMessage(who, "You catch some soggy footwear!");
		else
			fishtype := RandomInt(UOBJ_FISH_END - UOBJ_FISH_START)+ UOBJ_FISH_START;
			SendSysMessage(who, "You catch a nice fish!");
		endif
	elseif(thisone <= 98)
		fishtype := magicfish_array[RandomDiceRoll(1d8)];
		SendSysMessage(who, "You caught aodd fish!");
	elseif(thisone <= 99)
		if(RandomInt(currentskill) >= 50)
			fishtype := "level" +(RandomInt(2)+ 1)+ "map";
			SendSysMessage(who, "You find an old tattered map!");
		else
			fishtype := RandomInt(UOBJ_FISH_END - UOBJ_FISH_START)+ UOBJ_FISH_START;
			SendSysMessage(who, "You catch a nice fish!");
		endif
	else
		if(GetAttribute(who, FISHING) >= 95)
			fishtype := "sosbottle";
			SendSysMessage(who, "You find a message in a bottle!");
		else
			fishtype := RandomInt(UOBJ_FISH_END - UOBJ_FISH_START)+ UOBJ_FISH_START;
			SendSysMessage(who, "You catch a nice fish!");
		endif
	endif
	
	return fishtype;
endfunction

function CriticalFailure(who, targetsquare)

	var it := CreateNpcFromTemplate("seaserpent", targetsquare.x, targetsquare.y, targetsquare.z, 0, who.realm);
	if(it)
		SendSysMessage(who, "Oops, that's not a fish!");
		var event := struct{"type":=SYSEVENT_ENGAGED, "source":=who};
		SendEvent(it, event);
	endif
	
endfunction

function IsFishingPoleEquipped(who, fishingpole)
	if((!Accessible(who, fishingpole)) || (Distance(who, fishingpole)> 1))
		return 0;
	endif
	foreach item in ListEquippedItems(who)
		if(fishingpole.serial == item.serial)
			return 1;
		endif
	endforeach
	return EquipItem(who, fishingpole);
endfunction

function GetSOSTreasure(who, targetsquare, sosmsg)
	targetsquare := targetsquare;
	if(SkillCheck(who, FISHING, 80, 200) > 0)
		var itemcfg := ReadConfigFile(":*:itemdesc");
		var it, oldname;
		if(RandomInt(100)< 75)
			var newitem;
			var artarray;
			case(RandomInt(3))
			//			shells
				0: newitem := RandomInt(0x0fcc - 0x0fc4)+ 0x0fc4;
			//			paintings and portraits
				1: artarray := array(0xea4, 0xea8, 0xea7, 0xe9f, 0xea0, 0xea3, 0xea6);
				   newitem := artarray[RandomInt(7) + 1];
			//			pillows
				2: artarray := array(0x1397, 0x13a4, 0x13a5, 0x13a6, 0x13a7, 0x13a8, 0x13a9, 0x13ab, 0x13ac, 0x13ad, 0x13ae, 0x163a, 0x163b, 0x163c);
				   newitem := artarray[RandomInt(14) + 1];
			endcase
			it := CreateItemInBackpack(who, newitem, 1);
			oldname := it.name;
			if((!oldname) || (oldname == ""))
				oldname := itemcfg[newitem].desc;
			endif
			it.name := oldname + " [Recovered from a shipwreck]";
			it.movable := 1;
			SendSysMessage(who, "You caught something interesting!");
		else
				SendSysMessage(who, "You catch a sunken treasure!");
				var chest := CreateItemInBackpack(who, 0x9e40, 1);
				case(RandomInt(4) + 1)
					1: chest.graphic := 0xe40;
					2: chest.graphic := 0xe41;
					3: chest.graphic := 0xe7c;
					4: chest.graphic := 0x9ab;
				endcase
				chest.name := "metal chest [Recovered from a shipwreck]";
				chest.movable := 1;
			// Set-up to create loot.
				Loot_Generate(chest, "Chestspawn" + RandomDiceRoll(1d5));
				DestroyItem(sosmsg);
		endif
	else
		SendSysMessage(who, "Something big just slipped off your hook!");
	endif
	return 0;
endfunction

function isSOS(who, targetsquare)
	var packitems;
	packitems := EnumerateItemsInContainer(who.backpack);
	var i, sosx, sosy;
	for(i := 1; i <= len(packitems); i := i + 1)
		if((packitems[i].objtype == 0xa363))
			sosx := GetObjProperty(packitems[i], "tileX");
			sosy := GetObjProperty(packitems[i], "tileY");
			var xd, yd;
			xd := Abs(targetsquare.x - sosx);
			yd := Abs(targetsquare.y - sosy);
			if((xd <= 6)&&(yd <= 6))
				GetSOSTreasure(who, targetsquare, packitems[i]);
				return 1;
			endif
		endif
	endfor
	return 0;
endfunction
