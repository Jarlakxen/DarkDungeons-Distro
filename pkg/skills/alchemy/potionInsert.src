use uo;
use os;
use cfgfile;

include ":alchemy:potionKegs";

program on_insert(who, keg, movetype, inserttype, potion, existing_stack, amt_to_add);
	inserttype := inserttype;
	amt_to_add := amt_to_add; // stops ecompile "not used" warnings
	existing_stack := existing_stack;  // stops ecompile "not used" warnings

	// Makes sure move type is 0
	if (movetype)
		return 0;
	endif

	var vendorserial := GetObjProperty(keg,"Vendored");
	if((vendorserial) && (who.cmdlevel < 3))
		SendSysMessage(who, "You can't fill a keg while it's on a vendor.");
		MoveItemToContainer(potion, who.backpack);
		return 0;
	endif

	var type := GetObjProperty(keg, "PotionType");
	var amt  := CInt(GetObjProperty(keg, "PotionAmount"));

	if(is_potion(potion.objtype))
		if(amt <= 0)
			type := CInt(potion.objtype);
			SetObjProperty(keg, "PotionType", type);
			SetObjProperty(keg, "OwnerSerial", who.serial);
			amt := 0;
		endif
		if(type != CInt(potion.objtype))
			SendSysMessage(who, "You don't think it would be a good idea to mix these types of potions together.");
			MoveItemToContainer(potion, who.backpack);
			return 0;
		endif
		if(amt >= 100)
			SendSysMessage(who, "The keg can't hold any more.");
			MoveItemToContainer(potion, who.backpack);
			return 0;
		endif

		var potion_count := potion.amount; // For stackables. Boooo.
		if(SubtractAmount(potion, potion_count))
			amt += potion_count;
			SetObjProperty(keg, "PotionAmount", amt);
			CreateItemInBackpack(who, 0xf0e, potion_count);
			PlaySoundEffect(who, 0x241);
			SendSysMessage(who, type);
			rename_keg(keg, CInt(GetObjProperty(keg, "PotionType")));
			SendSysMessage(who, "You empty the contents of the bottle into the keg.");
			return 1;
		endif
	else
		SendSysMessage(who, "You cannot put that in a potion keg.");
		MoveItemToContainer(potion, who.backpack);
		return 0;
	endif
endprogram

